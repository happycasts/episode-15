now I know "apt-get update" will get me all the pkg name+info, of all the repos in sources.list
but my questions is 

Q: where is the info saved on local drive?
A: plain text list: /var/lib/apt/lists
   binary: /var/cache/apt/pkgcache.bin

Q: Is it a same file that apt-cache uses?
A: Yes and No.
`apt-get update` will store same info in these two places.
But if I delete a package in the plain text version, apt-get still can tab complete the pkg name, but end result is a error:

  E: Package 'abrowser' has no installation candidate


what is /var/lib/dpkg/status? Installed packages list in current system, plz to go when you want to check the info of your installed package, and you don't want to remember all the fucking apt-cache commands and options


SO, I guess it is like this:
1. apt-get install pkg-not-in-cache
   #this end up with a error
2. sudo apt-get update
   #get all pkg names of all repos in sources.list
3. apt-get intall pkg-now-in-cache
   #same pkg in step1 is now installed



delete most repos in sources.list, and I have

    peter:/var/cache/apt$ du -sh pkgcache.bin 
    16M pkgcache.bin
    peter:/var/cache/apt$ du -sh pkgcache.bin 
    1.5M    pkgcache.bin
    peter:/var/cache/apt$ 

And I see this on web:

    pkgcache Apt’s memory mapped package cache location, normally /var/cache/apt/pkgcache.bin
    Quote
    it is dangerous to delete pkgcache.bin ?
    No – package managers just make new one.
    Sometimes it is good to remove pkgcache.bin:
    apt-get, aptitude, synaptic, update- manager crash
    http://ubuntuforums.org/showthread.php?t=299705
    Quote
    Try removing /var/cache/apt/pkgcache.bin and /var/cache/apt/srcpkgcache.bin then re-run apt-get update

this might be useful:

    peter:~$ ldd `which xxx`
        linux-gate.so.1 =>  (0x003fd000)
        libncursesw.so.5 => /lib/libncursesw.so.5 (0x00be9000)
        libc.so.6 => /lib/i386-linux-gnu/libc.so.6 (0x00110000)
        libdl.so.2 => /lib/i386-linux-gnu/libdl.so.2 (0x00918000)
        /lib/ld-linux.so.2 (0x00c72000)
    peter:~$ dpkg -S /lib/libncursesw.so.5
    libncursesw5: /lib/libncursesw.so.5


Now how to solove the "unautenticated" issue when doing "apt-get install happyhello"?

  sudo apt-get install gnupg # and a lot of steps here http://tech.randomness.org.uk/Setting_up_a_Signed_apt_repo.html


it seems that ppa is the right way to go: https://help.launchpad.net/Packaging/PPA

----
FIX: for "extra.ubuntu" repo KEY issue:

    gpg --keyserver keyserver.ubuntu.com --recv 3E5C1192
    gpg --export --armor 3E5C1192 | sudo apt-key add -
    sudo apt-get update

I do not use extra repo I think, but at least I won't see the "PUB KEY" error everytime I run "apt-get update"
----

----
A typical work-flow to use sb's repo:

    To use this repo add the gpg key

            wget -O - http://apt.baruwa.org/baruwa-apt-keys.gpg | apt-key add -
        

    Add the repo to your /etc/apt/sources.list

            #debian
            deb http://apt.baruwa.org/debian unstable main
            #ubuntu
            deb http://apt.baruwa.org/ubuntu natty main
        

    Then install using

        apt-get update
        apt-get install baruwa
----    
